@model DotNetAppSqlDb.Models.Empresa

@{
    ViewBag.Title = "Passeios";
    Layout = "~/Views/Shared/EmpresaView.cshtml";
    DotNetAppSqlDb.Models.Empresa vEmpresa = (DotNetAppSqlDb.Models.Empresa)HttpContext.Current.Session["EmpresaLogada"];
}


<h2>Cadastrar Novo Passeio</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Empresa</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NomeEmpresa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeEmpresa, new { htmlAttributes = new   { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeEmpresa, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="datas-div">
            @foreach (var data in Model.Datas)
            {
                @Html.Partial("DataRow", data)
            }
        </div>
        <button type="button" id="AddData">Add Child</button>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" language="javascript">
        $(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: 'dd/mm/yy',
                dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                nextText: 'Proximo',
                prevText: 'Anterior',
                showOn: "button"
            }).css("display", "inline-block")
                .next("button").button({
                    icons: { primary: "ui-icon-calendar" },
                    label: "Selecione uma data",
                    text: false
                });
        });
        $("#AddData").on("click", function () {
            fetch('@Url.Action("AddData", "Empresas")').then(async function (result) {
                const partialView = await result.text();

                $('#datas-div').append($.parseHTML(partialView));
            }).catch((e) => {
                console.log(e);
            });
        });
        $('body').on("click", '*[data-action="removeItem"]', function (e) {
            var btn = $(this);
            var row = btn.closest('.form-inline');
            var firstCell = $(row.find('.form-group')[0]);
            var checkBox = firstCell.find('*[data-is-deleted]');
            var checkBoxVal = checkBox.val();
            if (checkBoxVal === 'False' || checkBox.val() === 'false') {
                checkBox.val('true');
                row.find('.form-group').find('input, textarea, select').attr('readonly', 'readonly');
            } else {
                checkBox.val('false');
                row.find('.form-group').find('input, textarea, select').attr("readonly", false);
            }
        });
    </script>
}
